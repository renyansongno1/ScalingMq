package org.scalingmq.storage.core.replicate.raft.entity;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RaftHeartbeatRequest.proto

public final class RaftHeartbeatReqWrapper {
  private RaftHeartbeatReqWrapper() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RaftHeartbeatReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RaftHeartbeatReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 当前leader的ID
     * </pre>
     *
     * <code>int32 leaderId = 1;</code>
     * @return The leaderId.
     */
    int getLeaderId();

    /**
     * <pre>
     * 期数
     * </pre>
     *
     * <code>int64 term = 2;</code>
     * @return The term.
     */
    long getTerm();

    /**
     * <pre>
     * 当前leader最大的消息位点
     * </pre>
     *
     * <code>int64 maxOffset = 3;</code>
     * @return The maxOffset.
     */
    long getMaxOffset();
  }
  /**
   * Protobuf type {@code RaftHeartbeatReq}
   */
  public static final class RaftHeartbeatReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RaftHeartbeatReq)
      RaftHeartbeatReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RaftHeartbeatReq.newBuilder() to construct.
    private RaftHeartbeatReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RaftHeartbeatReq() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RaftHeartbeatReq();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RaftHeartbeatReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              leaderId_ = input.readInt32();
              break;
            }
            case 16: {

              term_ = input.readInt64();
              break;
            }
            case 24: {

              maxOffset_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftHeartbeatReqWrapper.internal_static_RaftHeartbeatReq_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftHeartbeatReqWrapper.internal_static_RaftHeartbeatReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftHeartbeatReq.class, Builder.class);
    }

    public static final int LEADERID_FIELD_NUMBER = 1;
    private int leaderId_;
    /**
     * <pre>
     * 当前leader的ID
     * </pre>
     *
     * <code>int32 leaderId = 1;</code>
     * @return The leaderId.
     */
    @Override
    public int getLeaderId() {
      return leaderId_;
    }

    public static final int TERM_FIELD_NUMBER = 2;
    private long term_;
    /**
     * <pre>
     * 期数
     * </pre>
     *
     * <code>int64 term = 2;</code>
     * @return The term.
     */
    @Override
    public long getTerm() {
      return term_;
    }

    public static final int MAXOFFSET_FIELD_NUMBER = 3;
    private long maxOffset_;
    /**
     * <pre>
     * 当前leader最大的消息位点
     * </pre>
     *
     * <code>int64 maxOffset = 3;</code>
     * @return The maxOffset.
     */
    @Override
    public long getMaxOffset() {
      return maxOffset_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (leaderId_ != 0) {
        output.writeInt32(1, leaderId_);
      }
      if (term_ != 0L) {
        output.writeInt64(2, term_);
      }
      if (maxOffset_ != 0L) {
        output.writeInt64(3, maxOffset_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leaderId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, leaderId_);
      }
      if (term_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, term_);
      }
      if (maxOffset_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, maxOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftHeartbeatReq)) {
        return super.equals(obj);
      }
      RaftHeartbeatReq other = (RaftHeartbeatReq) obj;

      if (getLeaderId()
          != other.getLeaderId()) return false;
      if (getTerm()
          != other.getTerm()) return false;
      if (getMaxOffset()
          != other.getMaxOffset()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEADERID_FIELD_NUMBER;
      hash = (53 * hash) + getLeaderId();
      hash = (37 * hash) + TERM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTerm());
      hash = (37 * hash) + MAXOFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxOffset());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftHeartbeatReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftHeartbeatReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftHeartbeatReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftHeartbeatReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftHeartbeatReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftHeartbeatReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftHeartbeatReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftHeartbeatReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftHeartbeatReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftHeartbeatReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftHeartbeatReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftHeartbeatReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftHeartbeatReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RaftHeartbeatReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RaftHeartbeatReq)
        RaftHeartbeatReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftHeartbeatReqWrapper.internal_static_RaftHeartbeatReq_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftHeartbeatReqWrapper.internal_static_RaftHeartbeatReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftHeartbeatReq.class, Builder.class);
      }

      // Construct using RaftHeartbeatReqWrapper.RaftHeartbeatReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        leaderId_ = 0;

        term_ = 0L;

        maxOffset_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftHeartbeatReqWrapper.internal_static_RaftHeartbeatReq_descriptor;
      }

      @Override
      public RaftHeartbeatReq getDefaultInstanceForType() {
        return RaftHeartbeatReq.getDefaultInstance();
      }

      @Override
      public RaftHeartbeatReq build() {
        RaftHeartbeatReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RaftHeartbeatReq buildPartial() {
        RaftHeartbeatReq result = new RaftHeartbeatReq(this);
        result.leaderId_ = leaderId_;
        result.term_ = term_;
        result.maxOffset_ = maxOffset_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftHeartbeatReq) {
          return mergeFrom((RaftHeartbeatReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftHeartbeatReq other) {
        if (other == RaftHeartbeatReq.getDefaultInstance()) return this;
        if (other.getLeaderId() != 0) {
          setLeaderId(other.getLeaderId());
        }
        if (other.getTerm() != 0L) {
          setTerm(other.getTerm());
        }
        if (other.getMaxOffset() != 0L) {
          setMaxOffset(other.getMaxOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftHeartbeatReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftHeartbeatReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int leaderId_ ;
      /**
       * <pre>
       * 当前leader的ID
       * </pre>
       *
       * <code>int32 leaderId = 1;</code>
       * @return The leaderId.
       */
      @Override
      public int getLeaderId() {
        return leaderId_;
      }
      /**
       * <pre>
       * 当前leader的ID
       * </pre>
       *
       * <code>int32 leaderId = 1;</code>
       * @param value The leaderId to set.
       * @return This builder for chaining.
       */
      public Builder setLeaderId(int value) {
        
        leaderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前leader的ID
       * </pre>
       *
       * <code>int32 leaderId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeaderId() {
        
        leaderId_ = 0;
        onChanged();
        return this;
      }

      private long term_ ;
      /**
       * <pre>
       * 期数
       * </pre>
       *
       * <code>int64 term = 2;</code>
       * @return The term.
       */
      @Override
      public long getTerm() {
        return term_;
      }
      /**
       * <pre>
       * 期数
       * </pre>
       *
       * <code>int64 term = 2;</code>
       * @param value The term to set.
       * @return This builder for chaining.
       */
      public Builder setTerm(long value) {
        
        term_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 期数
       * </pre>
       *
       * <code>int64 term = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerm() {
        
        term_ = 0L;
        onChanged();
        return this;
      }

      private long maxOffset_ ;
      /**
       * <pre>
       * 当前leader最大的消息位点
       * </pre>
       *
       * <code>int64 maxOffset = 3;</code>
       * @return The maxOffset.
       */
      @Override
      public long getMaxOffset() {
        return maxOffset_;
      }
      /**
       * <pre>
       * 当前leader最大的消息位点
       * </pre>
       *
       * <code>int64 maxOffset = 3;</code>
       * @param value The maxOffset to set.
       * @return This builder for chaining.
       */
      public Builder setMaxOffset(long value) {
        
        maxOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前leader最大的消息位点
       * </pre>
       *
       * <code>int64 maxOffset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxOffset() {
        
        maxOffset_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RaftHeartbeatReq)
    }

    // @@protoc_insertion_point(class_scope:RaftHeartbeatReq)
    private static final RaftHeartbeatReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftHeartbeatReq();
    }

    public static RaftHeartbeatReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RaftHeartbeatReq>
        PARSER = new com.google.protobuf.AbstractParser<RaftHeartbeatReq>() {
      @Override
      public RaftHeartbeatReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RaftHeartbeatReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RaftHeartbeatReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RaftHeartbeatReq> getParserForType() {
      return PARSER;
    }

    @Override
    public RaftHeartbeatReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RaftHeartbeatReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RaftHeartbeatReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\032RaftHeartbeatRequest.proto\"E\n\020RaftHear" +
      "tbeatReq\022\020\n\010leaderId\030\001 \001(\005\022\014\n\004term\030\002 \001(\003" +
      "\022\021\n\tmaxOffset\030\003 \001(\003B\031B\027RaftHeartbeatReqW" +
      "rapperb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_RaftHeartbeatReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RaftHeartbeatReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RaftHeartbeatReq_descriptor,
        new String[] { "LeaderId", "Term", "MaxOffset", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
