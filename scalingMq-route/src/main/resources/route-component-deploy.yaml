---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: scalingmq
  name: k8s-api-role
rules:
- apiGroups: [""]
  resources: ["namespaces","pods", "configmaps","services"]
  verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]

- apiGroups: [ "apps"]
  resources: ["deployments", "daemonsets", "statefulsets","replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: scalingmq
  name: k8s-api-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: scalingmq
  name: k8s-api-rollbinging
subjects:
- kind: ServiceAccount
  name: k8s-api-sa
  namespace: scalingmq
roleRef:
  kind: Role
  name: k8s-api-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scalingmq-route
  labels:
    app: scalingmq-route
spec:
  replicas: 1
  template:
    metadata:
      name: scalingmq-route
      labels:
        app: scalingmq-route
    spec:
      containers:
        - name: scalingmq-route
          image: scalingmq-route-component:v1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: SERVER_PORT
              value: "5432"
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "500m"
              memory: "1Gi"
      serviceAccountName: k8s-api-sa
      restartPolicy: Always
  selector:
    matchLabels:
      app: scalingmq-route
---
apiVersion: v1
kind: Service
metadata:
  name: scaling-route-service
  labels:
    app: scaling-route-service
spec:
  selector:
    app: scaling-route
  ports:
    - port: 5432
  type: NodePort
---